{"version":3,"sources":["logo.svg","reportWebVitals.js","index.js","App.js","Components/Playlists.js","Components/Top.js","Components/LoggedIn.js","Components/Login2.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","console","log","process","className","Playlists","props","useState","setUid","pList","setPList","pListNames","setPListNames","selectedPList","setSelectedPList","selectedPListID","setSelectedPListID","useEffect","updatePlaylists","api","getMe","data","id","tmp","map","it","Button","style","background","onClick","loadTracks","name","tracks","total","getUserPlaylists","limit","items","playlist","find","item","getPlaylistTracks","Table","structured","Header","Row","HeaderCell","Body","Cell","track","artists","album","added_at","textAlign","Top","topArtists","setTopArtists","topTracks","setTopTracks","slider","setSlider","getMyTopArtists","getMyTopTracks","justifyContent","Checkbox","onChange","i","fontSize","margin","padding","spotifyApi","SpotifyWebApi","LoggedIn","setName","setAccessToken","tok","display_name","to","float","color","inverted","setToken","window","localStorage","removeItem","path","element","Login2","token","scopes","hash","location","getItem","substring","split","elem","startsWith","setItem","href","join","Icon"],"mappings":"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","file":"static/js/main.d9f925ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\n// import Main from './Components/Main';\r\nimport { useState, useEffect } from 'react';\r\nimport Login2 from './Components/Login2';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nfunction App() {\r\n  console.log(process)\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Login2 className='Login'/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, {useEffect, useState} from \"react\"\r\nimport { Button, Table } from \"semantic-ui-react\"\r\n\r\nconst Playlists = (props) => {\r\n  const [uid, setUid] = useState()\r\n  const [pList, setPList] = useState([])  // playlists objects\r\n  const [pListNames, setPListNames] = useState()  // playlists as buttons w/name\r\n  const [selectedPList, setSelectedPList] = useState([])\r\n  const [selectedPListID, setSelectedPListID] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    updatePlaylists()\r\n    props.api.getMe().then(data => setUid(data.id))\r\n  },[])\r\n\r\n  useEffect(() => { // updates the playlist buttons in state\r\n    if (pList) {\r\n      const tmp = pList.map(it => <Button style={{background: it.id==selectedPListID ? \"green\" : \"white\"}} onClick={() => loadTracks(it.id)}>{it.name} - {it.tracks.total}</Button>)\r\n      // console.log(temp2)\r\n      setPListNames(tmp)\r\n    }\r\n  }, [pList, selectedPListID])\r\n  \r\n  const updatePlaylists = () => {\r\n    props.api.getUserPlaylists({limit:50})\r\n    .then((data) => setPList(data.items))\r\n    props.api.getUserPlaylists({limit:50})\r\n    .then((data) => console.log(data.items))\r\n  }\r\n\r\n  \r\n  const loadTracks = (id) => {\r\n    let playlist = pList.find(item => item.id == id)\r\n    console.log(\"LOADTRACK - \" + playlist.name)\r\n    \r\n    setSelectedPListID(playlist.id)\r\n    props.api.getPlaylistTracks(playlist.id).then(data => setSelectedPList(data.items))\r\n\r\n    // let i = 0\r\n    // while (ptrack.tracks.total > i) {\r\n    //   i+= 100\r\n    //   spotifyApi.getPlaylistTracks(ptrack.id, {limit: 100, offset:i}).then(data => setSelectedPList(data.items))\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Page\">\r\n      <h1>Playlists</h1>\r\n      {pListNames}\r\n      <Table structured>\r\n        <Table.Header>\r\n          <Table.Row>\r\n          <Table.HeaderCell>Name</Table.HeaderCell>\r\n          <Table.HeaderCell>Artist</Table.HeaderCell>\r\n          <Table.HeaderCell>Album</Table.HeaderCell>\r\n          <Table.HeaderCell>Date Added</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {selectedPList.map(data => <Table.Row>\r\n            <Table.Cell>{data.track.name}</Table.Cell>\r\n            <Table.Cell>{data.track.artists[0].name}</Table.Cell>\r\n            <Table.Cell>{data.track.album.name}</Table.Cell>\r\n            <Table.Cell>{data.added_at}</Table.Cell>\r\n          </Table.Row>)}\r\n        </Table.Body>\r\n      </Table>\r\n      <div style={{textAlign:'left'}}>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Playlists","import { useEffect, useState } from \"react\"\r\nimport { Checkbox } from \"semantic-ui-react\"\r\nimport \"../css/Top.css\"\r\n\r\nconst Top = (props) => {\r\n  const [topArtists, setTopArtists] = useState([])\r\n  const [topTracks, setTopTracks] = useState([])\r\n  const [slider, setSlider] = useState(true)\r\n\r\n  useEffect(() => {\r\n    console.log(\"initial\")\r\n    props.api.getMyTopArtists().then(data => setTopArtists(data.items))\r\n    props.api.getMyTopTracks().then(data => setTopTracks(data.items))\r\n    // props.api.getMyTopArtists().then(data => console.log(data))\r\n  }, [])\r\n  // const topArtists = props.api.getMyTopArtists().then(data => console.log(data))\r\n\r\n  return (\r\n    <div className=\"Page\">\r\n      <div style={{justifyContent:\"center\", textAlign:\"center\"}}>Top Artists <Checkbox slider style={{}} onChange={() => setSlider(!slider)}/> Top Tracks</div>\r\n      { slider ?\r\n      topArtists.map((data, i) => <p style={{fontSize:60-(i*2.5), margin:0, padding:0}}>{i+1}. {data.name}</p>)\r\n      :\r\n      topTracks.map((data, i) => <p style={{fontSize:60-(i*2.5), margin:0, padding:0}}>{i+1}. {data.name}</p>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Top","import React, { useState, useEffect} from 'react'\r\nimport { Button, Icon, Menu } from 'semantic-ui-react'\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport '../css/LoggedIn.css';\r\nimport { Route, Routes, NavLink, BrowserRouter } from 'react-router-dom';\r\n\r\nimport Playlists from './Playlists';\r\nimport Top from './Top';\r\n\r\nconst spotifyApi = new SpotifyWebApi;\r\n\r\nconst LoggedIn = (props) => {\r\n  const [name, setName] = useState('')\r\n  spotifyApi.setAccessToken(props.tok)\r\n\r\n  useEffect(() => {\r\n    spotifyApi.getMe().then((data) => setName(data.display_name))\r\n    // updatePlaylists()\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    props.setToken(\"\")\r\n    window.localStorage.removeItem(\"token\")\r\n  }\r\n\r\n  \r\n\r\n  // const loadTracks = (id) => {\r\n  //   let ptrack = pList.find(item => item.id == id)\r\n  //   console.log(\"LOADTRACK\")\r\n  //   let listItems = []\r\n  //   spotifyApi.getPlaylistTracks(ptrack.id).then(data => setSelectedPList(data.items))\r\n  //   spotifyApi.getPlaylistTracks(ptrack.id).then(function (data) {\r\n  //     console.log(data)\r\n  //     listItems = data\r\n  //     console.log(listItems)\r\n  //   },\r\n  //   function (err) {\r\n  //     console.error(err)\r\n  //   })\r\n\r\n    // spotifyApi.getPlaylistTracks(ptrack, {limit : 100}).then(data => console.log(data.items))\r\n    // let i = 0\r\n    // while (ptrack.tracks.total > i) {\r\n    //   i+= 100\r\n    //   spotifyApi.getPlaylistTracks(ptrack.id, {limit: 100, offset:i}).then(data => setSelectedPList(data.items))\r\n    // }\r\n  // }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n          <div className='Menu'>\r\n            <NavLink to=\"/Spotify-Syncer\"><h2 style={{float:'left', margin:\"0 1em\", color:\"#1DB954\"}}>{name}</h2></NavLink>\r\n            <NavLink to=\"/Spotify-Syncer/playlists\"><Button inverted style={{float:'left', margin:'0'}}>Playlists</Button></NavLink>\r\n            <NavLink to=\"/Spotify-Syncer/top\"><Button inverted>Top</Button></NavLink>\r\n            <NavLink to=\"/Spotify-Syncer\"><Button onClick={logout} style={{float:'right', margin:'0'}}>Logout</Button></NavLink>\r\n          </div>\r\n        {/* <Playlists pn={pListNames} sPList={selectedPList}/> */}\r\n        {/* {pListNames} */}\r\n        <Routes>\r\n            <Route path=\"/\" element={null}/>\r\n            <Route path=\"/playlists\" element={<Playlists api={spotifyApi}/>}/>\r\n            <Route path=\"/top\" element={<Top api={spotifyApi}/>} />\r\n          </Routes>\r\n      </div>\r\n      </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default LoggedIn","  import React, { useState, useEffect} from 'react'\r\n  import { Button, Icon } from 'semantic-ui-react'\r\n  import LoggedIn from './LoggedIn';\r\n  import \"../css/Login2.css\"\r\n\r\n  const Login2 = (props) => {\r\n    const [token, setToken] = useState(\"\");\r\n    const title = \"Spotify Sync\"\r\n    const description = \"A tool to improve playlist workflow\"\r\n\r\n    const authEndpoint = 'https://accounts.spotify.com/authorize'\r\n    const clientId = \"17408cc434f747328134b49f33eb23f9\"\r\n    // const redirectUri = \"http://localhost:3000\"\r\n    const redirectUri = \"https://Bryan-Tam.github.io/Spotify-Syncer\"\r\n    const responseType = \"token&show_dialog=true\"\r\n    const scopes = [\r\n      \"user-top-read\",\r\n        \"user-read-private\",\r\n        \"user-library-modify\",\r\n        \"playlist-modify-public\",\r\n        \"playlist-modify-private\",\r\n        \"playlist-read-private\",\r\n        \"user-read-playback-state\",\r\n        \"user-read-currently-playing\"\r\n\r\n    ]\r\n\r\n    useEffect(() => {\r\n        const hash = window.location.hash\r\n        let token = window.localStorage.getItem(\"token\")\r\n\r\n        // getToken()\r\n\r\n\r\n        if (!token && hash) {\r\n            token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1]\r\n\r\n            window.location.hash = \"\"\r\n            window.localStorage.setItem(\"token\", token)\r\n        }\r\n\r\n        setToken(token)\r\n\r\n    }, [])\r\n\r\n    console.log(scopes)\r\n    if (!token) {\r\n      return (\r\n          <div className='Login'>\r\n            <h1>{title}</h1>\r\n            <p>{description}</p>\r\n      \r\n            <a href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}\r\n            &response_type=${responseType}`}>\r\n              <Button style={{color:'#1DB954'}}><Icon name='spotify'/>Login\r\n                to Spotify</Button>\r\n              </a>   \r\n          </div>\r\n      )\r\n    }\r\n\r\n    else {\r\n      return (\r\n        <LoggedIn setToken={setToken} tok={token}/>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default Login2"],"sourceRoot":""}